#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TableFiller.Data.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WallyWorld")]
	public partial class WallyWorldDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertStoreInfo(StoreInfo instance);
    partial void UpdateStoreInfo(StoreInfo instance);
    partial void DeleteStoreInfo(StoreInfo instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeDirectDepositInfo(EmployeeDirectDepositInfo instance);
    partial void UpdateEmployeeDirectDepositInfo(EmployeeDirectDepositInfo instance);
    partial void DeleteEmployeeDirectDepositInfo(EmployeeDirectDepositInfo instance);
    partial void InsertEmployeeContact(EmployeeContact instance);
    partial void UpdateEmployeeContact(EmployeeContact instance);
    partial void DeleteEmployeeContact(EmployeeContact instance);
    partial void InsertEmployeeWage(EmployeeWage instance);
    partial void UpdateEmployeeWage(EmployeeWage instance);
    partial void DeleteEmployeeWage(EmployeeWage instance);
    #endregion
		
		public WallyWorldDataContext() : 
				base(global::TableFiller.Properties.Settings.Default.WallyWorldConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WallyWorldDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WallyWorldDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WallyWorldDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WallyWorldDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<StoreInfo> StoreInfos
		{
			get
			{
				return this.GetTable<StoreInfo>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDirectDepositInfo> EmployeeDirectDepositInfos
		{
			get
			{
				return this.GetTable<EmployeeDirectDepositInfo>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeContact> EmployeeContacts
		{
			get
			{
				return this.GetTable<EmployeeContact>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeWage> EmployeeWages
		{
			get
			{
				return this.GetTable<EmployeeWage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DID;
		
		private string _STRID;
		
		private string _MEID;
		
		private string _DPRTName;
		
		private System.Nullable<System.DateTime> _DPRTLastRestock;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<StoreInfo> _StoreInfo;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDIDChanging(string value);
    partial void OnDIDChanged();
    partial void OnSTRIDChanging(string value);
    partial void OnSTRIDChanged();
    partial void OnMEIDChanging(string value);
    partial void OnMEIDChanged();
    partial void OnDPRTNameChanging(string value);
    partial void OnDPRTNameChanged();
    partial void OnDPRTLastRestockChanging(System.Nullable<System.DateTime> value);
    partial void OnDPRTLastRestockChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._StoreInfo = default(EntityRef<StoreInfo>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DID
		{
			get
			{
				return this._DID;
			}
			set
			{
				if ((this._DID != value))
				{
					this.OnDIDChanging(value);
					this.SendPropertyChanging();
					this._DID = value;
					this.SendPropertyChanged("DID");
					this.OnDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRID", DbType="VarChar(150)")]
		public string STRID
		{
			get
			{
				return this._STRID;
			}
			set
			{
				if ((this._STRID != value))
				{
					if (this._StoreInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTRIDChanging(value);
					this.SendPropertyChanging();
					this._STRID = value;
					this.SendPropertyChanged("STRID");
					this.OnSTRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEID", DbType="VarChar(150)")]
		public string MEID
		{
			get
			{
				return this._MEID;
			}
			set
			{
				if ((this._MEID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEIDChanging(value);
					this.SendPropertyChanging();
					this._MEID = value;
					this.SendPropertyChanged("MEID");
					this.OnMEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPRTName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DPRTName
		{
			get
			{
				return this._DPRTName;
			}
			set
			{
				if ((this._DPRTName != value))
				{
					this.OnDPRTNameChanging(value);
					this.SendPropertyChanging();
					this._DPRTName = value;
					this.SendPropertyChanged("DPRTName");
					this.OnDPRTNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPRTLastRestock", DbType="Date")]
		public System.Nullable<System.DateTime> DPRTLastRestock
		{
			get
			{
				return this._DPRTLastRestock;
			}
			set
			{
				if ((this._DPRTLastRestock != value))
				{
					this.OnDPRTLastRestockChanging(value);
					this.SendPropertyChanging();
					this._DPRTLastRestock = value;
					this.SendPropertyChanged("DPRTLastRestock");
					this.OnDPRTLastRestockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="DID", OtherKey="DID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreInfo_Department", Storage="_StoreInfo", ThisKey="STRID", OtherKey="STRID", IsForeignKey=true)]
		public StoreInfo StoreInfo
		{
			get
			{
				return this._StoreInfo.Entity;
			}
			set
			{
				StoreInfo previousValue = this._StoreInfo.Entity;
				if (((previousValue != value) 
							|| (this._StoreInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreInfo.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._StoreInfo.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._STRID = value.STRID;
					}
					else
					{
						this._STRID = default(string);
					}
					this.SendPropertyChanged("StoreInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Employee", ThisKey="MEID", OtherKey="EID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._MEID = value.EID;
					}
					else
					{
						this._MEID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regions")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _REGID;
		
		private string _rState;
		
		private string _rCountry;
		
		private EntitySet<StoreInfo> _StoreInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREGIDChanging(string value);
    partial void OnREGIDChanged();
    partial void OnrStateChanging(string value);
    partial void OnrStateChanged();
    partial void OnrCountryChanging(string value);
    partial void OnrCountryChanged();
    #endregion
		
		public Region()
		{
			this._StoreInfos = new EntitySet<StoreInfo>(new Action<StoreInfo>(this.attach_StoreInfos), new Action<StoreInfo>(this.detach_StoreInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string REGID
		{
			get
			{
				return this._REGID;
			}
			set
			{
				if ((this._REGID != value))
				{
					this.OnREGIDChanging(value);
					this.SendPropertyChanging();
					this._REGID = value;
					this.SendPropertyChanged("REGID");
					this.OnREGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rState", DbType="VarChar(100)")]
		public string rState
		{
			get
			{
				return this._rState;
			}
			set
			{
				if ((this._rState != value))
				{
					this.OnrStateChanging(value);
					this.SendPropertyChanging();
					this._rState = value;
					this.SendPropertyChanged("rState");
					this.OnrStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rCountry", DbType="VarChar(100)")]
		public string rCountry
		{
			get
			{
				return this._rCountry;
			}
			set
			{
				if ((this._rCountry != value))
				{
					this.OnrCountryChanging(value);
					this.SendPropertyChanging();
					this._rCountry = value;
					this.SendPropertyChanged("rCountry");
					this.OnrCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_StoreInfo", Storage="_StoreInfos", ThisKey="REGID", OtherKey="REGID")]
		public EntitySet<StoreInfo> StoreInfos
		{
			get
			{
				return this._StoreInfos;
			}
			set
			{
				this._StoreInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreInfos(StoreInfo entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_StoreInfos(StoreInfo entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreInfo")]
	public partial class StoreInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STRID;
		
		private string _REGID;
		
		private string _MEID;
		
		private string _SStreet;
		
		private string _SCity;
		
		private string _SState;
		
		private System.Nullable<int> _SZip;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTRIDChanging(string value);
    partial void OnSTRIDChanged();
    partial void OnREGIDChanging(string value);
    partial void OnREGIDChanged();
    partial void OnMEIDChanging(string value);
    partial void OnMEIDChanged();
    partial void OnSStreetChanging(string value);
    partial void OnSStreetChanged();
    partial void OnSCityChanging(string value);
    partial void OnSCityChanged();
    partial void OnSStateChanging(string value);
    partial void OnSStateChanged();
    partial void OnSZipChanging(System.Nullable<int> value);
    partial void OnSZipChanged();
    #endregion
		
		public StoreInfo()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Region = default(EntityRef<Region>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STRID
		{
			get
			{
				return this._STRID;
			}
			set
			{
				if ((this._STRID != value))
				{
					this.OnSTRIDChanging(value);
					this.SendPropertyChanging();
					this._STRID = value;
					this.SendPropertyChanged("STRID");
					this.OnSTRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGID", DbType="VarChar(150)")]
		public string REGID
		{
			get
			{
				return this._REGID;
			}
			set
			{
				if ((this._REGID != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnREGIDChanging(value);
					this.SendPropertyChanging();
					this._REGID = value;
					this.SendPropertyChanged("REGID");
					this.OnREGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEID", DbType="VarChar(150)")]
		public string MEID
		{
			get
			{
				return this._MEID;
			}
			set
			{
				if ((this._MEID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEIDChanging(value);
					this.SendPropertyChanging();
					this._MEID = value;
					this.SendPropertyChanged("MEID");
					this.OnMEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SStreet", DbType="VarChar(100)")]
		public string SStreet
		{
			get
			{
				return this._SStreet;
			}
			set
			{
				if ((this._SStreet != value))
				{
					this.OnSStreetChanging(value);
					this.SendPropertyChanging();
					this._SStreet = value;
					this.SendPropertyChanged("SStreet");
					this.OnSStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCity", DbType="VarChar(100)")]
		public string SCity
		{
			get
			{
				return this._SCity;
			}
			set
			{
				if ((this._SCity != value))
				{
					this.OnSCityChanging(value);
					this.SendPropertyChanging();
					this._SCity = value;
					this.SendPropertyChanged("SCity");
					this.OnSCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SState", DbType="VarChar(100)")]
		public string SState
		{
			get
			{
				return this._SState;
			}
			set
			{
				if ((this._SState != value))
				{
					this.OnSStateChanging(value);
					this.SendPropertyChanging();
					this._SState = value;
					this.SendPropertyChanged("SState");
					this.OnSStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SZip", DbType="Int")]
		public System.Nullable<int> SZip
		{
			get
			{
				return this._SZip;
			}
			set
			{
				if ((this._SZip != value))
				{
					this.OnSZipChanging(value);
					this.SendPropertyChanging();
					this._SZip = value;
					this.SendPropertyChanged("SZip");
					this.OnSZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreInfo_Department", Storage="_Departments", ThisKey="STRID", OtherKey="STRID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_StoreInfo", Storage="_Region", ThisKey="REGID", OtherKey="REGID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.StoreInfos.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.StoreInfos.Add(this);
						this._REGID = value.REGID;
					}
					else
					{
						this._REGID = default(string);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_StoreInfo", Storage="_Employee", ThisKey="MEID", OtherKey="EID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.StoreInfos.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.StoreInfos.Add(this);
						this._MEID = value.EID;
					}
					else
					{
						this._MEID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.StoreInfo = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.StoreInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EID;
		
		private string _DID;
		
		private string _Position;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _EnrollmentDate;
		
		private string _CurrentStatus;
		
		private System.Nullable<int> _OffDaysUsed;
		
		private System.Nullable<int> _OffDaysEarned;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<StoreInfo> _StoreInfos;
		
		private EntityRef<EmployeeDirectDepositInfo> _EmployeeDirectDepositInfo;
		
		private EntityRef<EmployeeContact> _EmployeeContact;
		
		private EntityRef<EmployeeWage> _EmployeeWage;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(string value);
    partial void OnEIDChanged();
    partial void OnDIDChanging(string value);
    partial void OnDIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEnrollmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnrollmentDateChanged();
    partial void OnCurrentStatusChanging(string value);
    partial void OnCurrentStatusChanged();
    partial void OnOffDaysUsedChanging(System.Nullable<int> value);
    partial void OnOffDaysUsedChanged();
    partial void OnOffDaysEarnedChanging(System.Nullable<int> value);
    partial void OnOffDaysEarnedChanged();
    #endregion
		
		public Employee()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._StoreInfos = new EntitySet<StoreInfo>(new Action<StoreInfo>(this.attach_StoreInfos), new Action<StoreInfo>(this.detach_StoreInfos));
			this._EmployeeDirectDepositInfo = default(EntityRef<EmployeeDirectDepositInfo>);
			this._EmployeeContact = default(EntityRef<EmployeeContact>);
			this._EmployeeWage = default(EntityRef<EmployeeWage>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DID", DbType="VarChar(150)")]
		public string DID
		{
			get
			{
				return this._DID;
			}
			set
			{
				if ((this._DID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDIDChanging(value);
					this.SendPropertyChanging();
					this._DID = value;
					this.SendPropertyChanged("DID");
					this.OnDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(100)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrollmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> EnrollmentDate
		{
			get
			{
				return this._EnrollmentDate;
			}
			set
			{
				if ((this._EnrollmentDate != value))
				{
					this.OnEnrollmentDateChanging(value);
					this.SendPropertyChanging();
					this._EnrollmentDate = value;
					this.SendPropertyChanged("EnrollmentDate");
					this.OnEnrollmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="VarChar(100)")]
		public string CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					this.OnCurrentStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatus = value;
					this.SendPropertyChanged("CurrentStatus");
					this.OnCurrentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffDaysUsed", DbType="Int")]
		public System.Nullable<int> OffDaysUsed
		{
			get
			{
				return this._OffDaysUsed;
			}
			set
			{
				if ((this._OffDaysUsed != value))
				{
					this.OnOffDaysUsedChanging(value);
					this.SendPropertyChanging();
					this._OffDaysUsed = value;
					this.SendPropertyChanged("OffDaysUsed");
					this.OnOffDaysUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffDaysEarned", DbType="Int")]
		public System.Nullable<int> OffDaysEarned
		{
			get
			{
				return this._OffDaysEarned;
			}
			set
			{
				if ((this._OffDaysEarned != value))
				{
					this.OnOffDaysEarnedChanging(value);
					this.SendPropertyChanging();
					this._OffDaysEarned = value;
					this.SendPropertyChanged("OffDaysEarned");
					this.OnOffDaysEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Departments", ThisKey="EID", OtherKey="MEID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_StoreInfo", Storage="_StoreInfos", ThisKey="EID", OtherKey="MEID")]
		public EntitySet<StoreInfo> StoreInfos
		{
			get
			{
				return this._StoreInfos;
			}
			set
			{
				this._StoreInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDirectDepositInfo", Storage="_EmployeeDirectDepositInfo", ThisKey="EID", OtherKey="EID", IsUnique=true, IsForeignKey=false)]
		public EmployeeDirectDepositInfo EmployeeDirectDepositInfo
		{
			get
			{
				return this._EmployeeDirectDepositInfo.Entity;
			}
			set
			{
				EmployeeDirectDepositInfo previousValue = this._EmployeeDirectDepositInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeDirectDepositInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeDirectDepositInfo.Entity = null;
						previousValue.Employee = null;
					}
					this._EmployeeDirectDepositInfo.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("EmployeeDirectDepositInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeContact", Storage="_EmployeeContact", ThisKey="EID", OtherKey="EID", IsUnique=true, IsForeignKey=false)]
		public EmployeeContact EmployeeContact
		{
			get
			{
				return this._EmployeeContact.Entity;
			}
			set
			{
				EmployeeContact previousValue = this._EmployeeContact.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeContact.Entity = null;
						previousValue.Employee = null;
					}
					this._EmployeeContact.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("EmployeeContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeWage", Storage="_EmployeeWage", ThisKey="EID", OtherKey="EID", IsUnique=true, IsForeignKey=false)]
		public EmployeeWage EmployeeWage
		{
			get
			{
				return this._EmployeeWage.Entity;
			}
			set
			{
				EmployeeWage previousValue = this._EmployeeWage.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeWage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeWage.Entity = null;
						previousValue.Employee = null;
					}
					this._EmployeeWage.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("EmployeeWage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DID", OtherKey="DID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DID = value.DID;
					}
					else
					{
						this._DID = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_StoreInfos(StoreInfo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_StoreInfos(StoreInfo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDirectDepositInfo")]
	public partial class EmployeeDirectDepositInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EID;
		
		private string _AccountNumber;
		
		private string _RoutingNumber;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(string value);
    partial void OnEIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnRoutingNumberChanging(string value);
    partial void OnRoutingNumberChanged();
    #endregion
		
		public EmployeeDirectDepositInfo()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(150)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutingNumber", DbType="VarChar(150)")]
		public string RoutingNumber
		{
			get
			{
				return this._RoutingNumber;
			}
			set
			{
				if ((this._RoutingNumber != value))
				{
					this.OnRoutingNumberChanging(value);
					this.SendPropertyChanging();
					this._RoutingNumber = value;
					this.SendPropertyChanged("RoutingNumber");
					this.OnRoutingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDirectDepositInfo", Storage="_Employee", ThisKey="EID", OtherKey="EID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeDirectDepositInfo = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeDirectDepositInfo = this;
						this._EID = value.EID;
					}
					else
					{
						this._EID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeContacts")]
	public partial class EmployeeContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Street;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<int> _Apt_;
		
		private System.Nullable<int> _Zip;
		
		private System.Nullable<long> _CellPhoneNumber;
		
		private System.Nullable<long> _HomePhoneNumber;
		
		private string _PrimaryEmail;
		
		private string _SecondaryEmail;
		
		private System.Nullable<long> _EmergencyPhoneNumber;
		
		private string _EmergencyFirstName;
		
		private string _EmergencyLastName;
		
		private string _EmergencyEmail;
		
		private string _EID;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnApt_Changing(System.Nullable<int> value);
    partial void OnApt_Changed();
    partial void OnZipChanging(System.Nullable<int> value);
    partial void OnZipChanged();
    partial void OnCellPhoneNumberChanging(System.Nullable<long> value);
    partial void OnCellPhoneNumberChanged();
    partial void OnHomePhoneNumberChanging(System.Nullable<long> value);
    partial void OnHomePhoneNumberChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnSecondaryEmailChanging(string value);
    partial void OnSecondaryEmailChanged();
    partial void OnEmergencyPhoneNumberChanging(System.Nullable<long> value);
    partial void OnEmergencyPhoneNumberChanged();
    partial void OnEmergencyFirstNameChanging(string value);
    partial void OnEmergencyFirstNameChanged();
    partial void OnEmergencyLastNameChanging(string value);
    partial void OnEmergencyLastNameChanged();
    partial void OnEmergencyEmailChanging(string value);
    partial void OnEmergencyEmailChanged();
    partial void OnEIDChanging(string value);
    partial void OnEIDChanged();
    #endregion
		
		public EmployeeContact()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Apt#", Storage="_Apt_", DbType="Int")]
		public System.Nullable<int> Apt_
		{
			get
			{
				return this._Apt_;
			}
			set
			{
				if ((this._Apt_ != value))
				{
					this.OnApt_Changing(value);
					this.SendPropertyChanging();
					this._Apt_ = value;
					this.SendPropertyChanged("Apt_");
					this.OnApt_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Int")]
		public System.Nullable<int> Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="BigInt")]
		public System.Nullable<long> CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhoneNumber", DbType="BigInt")]
		public System.Nullable<long> HomePhoneNumber
		{
			get
			{
				return this._HomePhoneNumber;
			}
			set
			{
				if ((this._HomePhoneNumber != value))
				{
					this.OnHomePhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._HomePhoneNumber = value;
					this.SendPropertyChanged("HomePhoneNumber");
					this.OnHomePhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PrimaryEmail
		{
			get
			{
				return this._PrimaryEmail;
			}
			set
			{
				if ((this._PrimaryEmail != value))
				{
					this.OnPrimaryEmailChanging(value);
					this.SendPropertyChanging();
					this._PrimaryEmail = value;
					this.SendPropertyChanged("PrimaryEmail");
					this.OnPrimaryEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryEmail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SecondaryEmail
		{
			get
			{
				return this._SecondaryEmail;
			}
			set
			{
				if ((this._SecondaryEmail != value))
				{
					this.OnSecondaryEmailChanging(value);
					this.SendPropertyChanging();
					this._SecondaryEmail = value;
					this.SendPropertyChanged("SecondaryEmail");
					this.OnSecondaryEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyPhoneNumber", DbType="BigInt")]
		public System.Nullable<long> EmergencyPhoneNumber
		{
			get
			{
				return this._EmergencyPhoneNumber;
			}
			set
			{
				if ((this._EmergencyPhoneNumber != value))
				{
					this.OnEmergencyPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._EmergencyPhoneNumber = value;
					this.SendPropertyChanged("EmergencyPhoneNumber");
					this.OnEmergencyPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFirstName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyFirstName
		{
			get
			{
				return this._EmergencyFirstName;
			}
			set
			{
				if ((this._EmergencyFirstName != value))
				{
					this.OnEmergencyFirstNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFirstName = value;
					this.SendPropertyChanged("EmergencyFirstName");
					this.OnEmergencyFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyLastName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyLastName
		{
			get
			{
				return this._EmergencyLastName;
			}
			set
			{
				if ((this._EmergencyLastName != value))
				{
					this.OnEmergencyLastNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyLastName = value;
					this.SendPropertyChanged("EmergencyLastName");
					this.OnEmergencyLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyEmail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyEmail
		{
			get
			{
				return this._EmergencyEmail;
			}
			set
			{
				if ((this._EmergencyEmail != value))
				{
					this.OnEmergencyEmailChanging(value);
					this.SendPropertyChanging();
					this._EmergencyEmail = value;
					this.SendPropertyChanged("EmergencyEmail");
					this.OnEmergencyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeContact", Storage="_Employee", ThisKey="EID", OtherKey="EID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeContact = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeContact = this;
						this._EID = value.EID;
					}
					else
					{
						this._EID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeWages")]
	public partial class EmployeeWage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EID;
		
		private System.Nullable<bool> _HasDirectDeposit;
		
		private System.Nullable<double> _Wage;
		
		private System.Nullable<int> _HoursWorked;
		
		private System.Nullable<double> _ExpectedSalary;
		
		private System.Nullable<double> _CurrentSalary;
		
		private System.Nullable<double> _StateTaxesPaid;
		
		private System.Nullable<double> _FederalTaxesPaid;
		
		private System.Nullable<double> _Bonuses;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(string value);
    partial void OnEIDChanged();
    partial void OnHasDirectDepositChanging(System.Nullable<bool> value);
    partial void OnHasDirectDepositChanged();
    partial void OnWageChanging(System.Nullable<double> value);
    partial void OnWageChanged();
    partial void OnHoursWorkedChanging(System.Nullable<int> value);
    partial void OnHoursWorkedChanged();
    partial void OnExpectedSalaryChanging(System.Nullable<double> value);
    partial void OnExpectedSalaryChanged();
    partial void OnCurrentSalaryChanging(System.Nullable<double> value);
    partial void OnCurrentSalaryChanged();
    partial void OnStateTaxesPaidChanging(System.Nullable<double> value);
    partial void OnStateTaxesPaidChanged();
    partial void OnFederalTaxesPaidChanging(System.Nullable<double> value);
    partial void OnFederalTaxesPaidChanged();
    partial void OnBonusesChanging(System.Nullable<double> value);
    partial void OnBonusesChanged();
    #endregion
		
		public EmployeeWage()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDirectDeposit", DbType="Bit")]
		public System.Nullable<bool> HasDirectDeposit
		{
			get
			{
				return this._HasDirectDeposit;
			}
			set
			{
				if ((this._HasDirectDeposit != value))
				{
					this.OnHasDirectDepositChanging(value);
					this.SendPropertyChanging();
					this._HasDirectDeposit = value;
					this.SendPropertyChanged("HasDirectDeposit");
					this.OnHasDirectDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wage", DbType="Float")]
		public System.Nullable<double> Wage
		{
			get
			{
				return this._Wage;
			}
			set
			{
				if ((this._Wage != value))
				{
					this.OnWageChanging(value);
					this.SendPropertyChanging();
					this._Wage = value;
					this.SendPropertyChanged("Wage");
					this.OnWageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursWorked", DbType="Int")]
		public System.Nullable<int> HoursWorked
		{
			get
			{
				return this._HoursWorked;
			}
			set
			{
				if ((this._HoursWorked != value))
				{
					this.OnHoursWorkedChanging(value);
					this.SendPropertyChanging();
					this._HoursWorked = value;
					this.SendPropertyChanged("HoursWorked");
					this.OnHoursWorkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedSalary", DbType="Float")]
		public System.Nullable<double> ExpectedSalary
		{
			get
			{
				return this._ExpectedSalary;
			}
			set
			{
				if ((this._ExpectedSalary != value))
				{
					this.OnExpectedSalaryChanging(value);
					this.SendPropertyChanging();
					this._ExpectedSalary = value;
					this.SendPropertyChanged("ExpectedSalary");
					this.OnExpectedSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentSalary", DbType="Float")]
		public System.Nullable<double> CurrentSalary
		{
			get
			{
				return this._CurrentSalary;
			}
			set
			{
				if ((this._CurrentSalary != value))
				{
					this.OnCurrentSalaryChanging(value);
					this.SendPropertyChanging();
					this._CurrentSalary = value;
					this.SendPropertyChanged("CurrentSalary");
					this.OnCurrentSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateTaxesPaid", DbType="Float")]
		public System.Nullable<double> StateTaxesPaid
		{
			get
			{
				return this._StateTaxesPaid;
			}
			set
			{
				if ((this._StateTaxesPaid != value))
				{
					this.OnStateTaxesPaidChanging(value);
					this.SendPropertyChanging();
					this._StateTaxesPaid = value;
					this.SendPropertyChanged("StateTaxesPaid");
					this.OnStateTaxesPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederalTaxesPaid", DbType="Float")]
		public System.Nullable<double> FederalTaxesPaid
		{
			get
			{
				return this._FederalTaxesPaid;
			}
			set
			{
				if ((this._FederalTaxesPaid != value))
				{
					this.OnFederalTaxesPaidChanging(value);
					this.SendPropertyChanging();
					this._FederalTaxesPaid = value;
					this.SendPropertyChanged("FederalTaxesPaid");
					this.OnFederalTaxesPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonuses", DbType="Float")]
		public System.Nullable<double> Bonuses
		{
			get
			{
				return this._Bonuses;
			}
			set
			{
				if ((this._Bonuses != value))
				{
					this.OnBonusesChanging(value);
					this.SendPropertyChanging();
					this._Bonuses = value;
					this.SendPropertyChanged("Bonuses");
					this.OnBonusesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeWage", Storage="_Employee", ThisKey="EID", OtherKey="EID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeWage = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeWage = this;
						this._EID = value.EID;
					}
					else
					{
						this._EID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
